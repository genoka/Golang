package main

import ("fmt
  "io/ioutil"
  "net/http"
  "html/template"
  )
func main()
{
http.handleFunc("/view/",viewHandler)
http.handleFunc("/edit/",editHandler)
http.handleFunc("/save",saveHandler)
http.ListenAndServe(":8080",nil)
}

func viewHandler( w http.ResponseWriter, r *http.Request)
{
 title := r.URL.Path[len("/view"):]
 p,err:=loadPage(title)
 if err!=nil
  {
    http.Redirect(w,r,"/view/"+title, http.StatusFound)
    return 
  }
  renderTemplate(w,"view",p)
}

func renderTemplate(w http.ResponseWriter, tmpl string, p*page)
 {
  t,_:=template.ParseFiles(tmpl+".html")
  t.Execute(w,p)
  }
  
func editHandler( w http.ResponseWriter, r *http.Request)
{
 title := r.URL.Path[len("/edit"):]
 p,err:=loadPage(title)
 if err!=nil
  {
    http.Redirect(w,r,"/edit/"+title, http.StatusFound)
    return 
  }
  renderTemplate(w,"edit",p)
}

func saveHandler( w http.ResponseWriter, r *http.Request)
{
 title := r.URL.Path[len("/save"):]
 body:=r.FormValue("body")
 p:= &Page{Title:title,Body:[]byte(body)}
 p.save()
 http.Redirect(w,r,"/view/"+title,http.StatusFound)
 }
